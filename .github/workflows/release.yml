name: Release

on:
    push:
        tags:
            - "v*"

permissions:
    contents: write

jobs:
    build:
        name: Build ${{ matrix.target }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact_name: qnote
                      asset_name: qnote-linux-x86_64

                    - os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      artifact_name: qnote
                      asset_name: qnote-linux-aarch64

                    - os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_name: qnote
                      asset_name: qnote-macos-x86_64

                    - os: macos-latest
                      target: aarch64-apple-darwin
                      artifact_name: qnote
                      asset_name: qnote-macos-aarch64

                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_name: qnote.exe
                      asset_name: qnote-windows-x86_64.exe

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target }}

            - name: Install cross-compilation tools (Linux ARM64)
              if: matrix.target == 'aarch64-unknown-linux-gnu'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gcc-aarch64-linux-gnu

            - name: Build
              run: cargo build --release --target ${{ matrix.target }} --features bundled
              env:
                  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

            - name: Strip binary (Linux/macOS)
              if: matrix.os != 'windows-latest'
              run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.asset_name }}
                  path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: Rename artifacts
              run: |
                  mkdir -p release
                  for dir in artifacts/*/; do
                    artifact=$(basename "$dir")
                    file=$(find "$dir" -type f -name 'qnote*' | head -n 1)
                    if [[ $artifact == *"windows"* ]]; then
                      cp "$file" "release/${artifact}"
                    else
                      cp "$file" "release/${artifact}"
                      chmod +x "release/${artifact}"
                    fi
                  done

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  files: release/*
                  generate_release_notes: true
                  body: |
                      ## Installation

                      Download the appropriate binary for your platform:
                      - **Linux x86_64**: `qnote-linux-x86_64`
                      - **Linux ARM64**: `qnote-linux-aarch64`
                      - **macOS Intel**: `qnote-macos-x86_64`
                      - **macOS Apple Silicon**: `qnote-macos-aarch64`
                      - **Windows**: `qnote-windows-x86_64.exe`

                      **Linux/macOS:**
                      ```bash
                      chmod +x qnote-*
                      sudo mv qnote-* /usr/local/bin/qnote
                      ```

                      **Windows:**
                      - Download `qnote-windows-x86_64.exe`
                      - Rename to `qnote.exe` and add to PATH
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
